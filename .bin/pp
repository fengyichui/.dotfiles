#!/bin/bash

# prevent messy code
export LC_ALL=C

# default params
timestamp_show=1
timestamp_from_start=''
timestamp_len=0
color_re_index=0
color_fail_re='fatal|fail|error|warn|bad|wrong|assert|fault'
color_seq=0
grep_re=''
tail_file=''

# usage
function print_usage ()
{
    echo "Process stdin with 'timestamp/filter/colorize'"
    echo "Options:"
    echo "  -g <regex>  just show greped line"
    echo "  -c <regex>  colorize <regex> line, default colorize:"
    echo "              '$color_fail_re' with RED"
    echo "  -C          colorize line sequentially"
    echo "  -T          Disable timestamp (default add system time)"
    echo "  -s          timestamp with 'elapsed since start of the program'"
    echo "  -f <file>   use 'tail -f <file>' to process"
    echo "  -h          show this help and exit"
    echo "by liqiang (2018/05/30)"
    exit 1
}

# Parsing params
while getopts g:c:f:CTsh opt; do
    case $opt in
        g) grep_re="$OPTARG" ;;
        c) eval "color_re_${color_re_index}='${OPTARG}'"; color_re_index=$((color_re_index + 1)) ;;
        C) color_seq=1 ;;
        T) timestamp_show=0 ;;
        s) timestamp_from_start='-s' ;;
        f) tail_file="$OPTARG" ;;
        ?) print_usage ;;
    esac
done

# command
if [[ -n "$tail_file" ]]; then
    # tail the file
    cmd="tail -f '$tail_file'"
else
    # output the stdin
    cmd='cat -'
fi

# filter
if [[ -n "$grep_re" ]]; then
    cmd="$cmd | stdbuf -o0 awk -v IGNORECASE=1 '/$grep_re/'"
fi

# timestamp (`ts` tool is in moreutils package)
if [[ "$timestamp_show" == "1" ]]; then
    if [[ -n "$timestamp_from_start" ]]; then
        cmd="$cmd | ts $timestamp_from_start '%H:%M:%S '"
        timestamp_len=8
    else
        cmd="$cmd | ts '%m/%d %H:%M:%S '"
        timestamp_len=14
    fi
fi

# filter and colorize
function awk_colorize ()
{
    if [[ "$1" == "0" && "$color_seq" == "1" ]]; then
        echo -n "t=substr(\$0,1,$timestamp_len); a=substr(\$0,$timestamp_len+1); c=32+NR%6; print \"\\033[1;30m\" t \"\\033[0;\" c \"m\" a \"\\033[0m\";"
    else
        echo -n "t=substr(\$0,1,$timestamp_len); a=substr(\$0,$timestamp_len+1); print \"\\033[1;30m\" t \"\\033[0;${1}m\" a \"\\033[0m\";"
    fi
}
colorize_fail="if(match(\$0,/$color_fail_re/)){$(awk_colorize 31)}
        else"
colorize_user=""
for((i=0; i<color_re_index; i++))
{
    eval "color_user=\$color_re_${i}"
    colorize_user="${colorize_user} if(match(\$0,/$color_user/)){$(awk_colorize $((32+(i%5))))}
        else"
}
cmd="$cmd | stdbuf -o0 awk -v IGNORECASE=1 '{
        ${colorize_fail}${colorize_user}{$(awk_colorize 0)}}'"

# show
#echo "$cmd"
#echo ""

# execute
eval "$cmd"

