#!/usr/bin/env bash
#
# Simple todo list manager.
#
# Tasks will be written to ~/tasks.
# Finished tasks, plus a timestamp, will be written to ~/.tasks_finished.
#
# usage: task [-e] [-f [line]]
#
#   task        list tasks
#   task ...    add task
#   task -e     edit tasks using $EDITOR
#   task -f 3   finish task on line 3
#   task 3      finish task on line 3
#   task -f     finish all tasks
#

if [[ -z "$OneDrive" ]]; then
    tasks_path="$HOME/tasks"
else
    tasks_path="$(cygpath "$OneDrive")/Note/tasks.txt"
fi

task_exists() {
    if [[ -s $tasks_path ]]; then
        newline="$*"
        while read -r line; do
            if [[ "$line" == "$newline" ]]; then
                return 0
            fi
        done < "$tasks_path"
    fi
    return 1
}

task() {
    if (( $# )); then
        if task_exists "$@"; then
            echo "Task exists already."
        else
            echo "$@" >> "$tasks_path"
        fi
    else
        if [[ -s $tasks_path ]]; then
            nl -w2 -s'  ' -ba "$tasks_path"
        else
            echo -e "\\e[1mLAZY TIME\\e[0m"
        fi
    fi
}

finish() {
    if (( $# == 0 )); then
        read -r -p "Finish All Task, Really? [yN] " answer
        [[ "$answer" != y ]] && return
    elif [[ ! "$*" =~ ^[0-9\ ]+$ ]]; then
        echo "Invalid Finish Params! (eg: task -f 1 3 9)"
        return
    fi
    p="$(echo "$*" | sed 's/ /p;/g')p"
    d="$(echo "$*" | sed 's/ /d;/g')d"
    lines=$(sed -n "$p" "$tasks_path" 2>/dev/null)
    sed -i "$d" "$tasks_path" 2>/dev/null
    if [[ -n $lines ]]; then
        while IFS= read -r task; do
            echo "$(date +'%F %R')  $task" >> ~/.tasks_finished
            echo "[FINISH] $task"
        done <<< "$lines"
    fi
}

case "$1" in
    -h|--help)
        echo "Usage: task [-e][-E][-f] task_desc"
        ;;
    -e)
        $EDITOR "$tasks_path"
        ;;
    -E)
        $EDITOR "$HOME/.tasks_finished"
        ;;
    -f)
        shift
        finish "$@"
        ;;
    *)
        task "$@"
        ;;
esac
