#!/bin/bash

# var
input=''
execute=''
slash=''
precise=''
win2linux=''
autocmd=''

if [[ "$OSTYPE" == "cygwin" ]]; then
    mount_dir='/cygdrive'
elif [[ -n "$WSL_DISTRO_NAME" ]]; then
    mount_dir='/mnt'
else
    echo "Not support OS!"
    exit 1
fi

function print_usage ()
{
    echo "Convert cygwin/wsl-string to windows-string and excute it"
    echo "Options:"
    echo "  -a <files>  convert command.exe to command with 'linux2win -e -r -i command.exe \$*'"
    echo "  -i <input>  convert input string"
    echo "  -x <input>  convert %XXX% windows system variable"
    echo "  -r          convert by win2linux"
    echo "  -e          execute it, if -r present, input use linux2win, ouput use win2linux"
    echo "  -p          use cygpath/wslpath to precise convert each exist paths"
    echo "  -s          use slash(\\) instead of backslash(/)"
    echo "  -h          show this help and exit"
    echo "by liqiang (2018/06/06)"
    exit 1
}

function pathconvert ()
{
    if [[ "$OSTYPE" == "cygwin" ]]; then
        cygpath $@
    elif [[ -n "$WSL_DISTRO_NAME" ]]; then
        wslpath $@
    fi
}

# Parsing params
while getopts a:i:x:reshp opt; do
    case $opt in
        a) autocmd="$OPTARG" ;;
        i) input="$OPTARG" ;;
        x) winsysvar="$OPTARG" ;;
        r) win2linux=1 ;;
        e) execute=1 ;;
        p) precise=1 ;;
        s) slash=1 ;;
        ?) print_usage ;;
    esac
done

# window system var
if [[ -n "$winsysvar" ]]; then
    result="$(cmd.exe /c "<nul set /p=%$winsysvar%" 2>/dev/null)"
    if [[ -n "$win2linux" ]]; then
        result=$(pathconvert -u $result)
    fi
    echo $result
    exit 0
fi

# auto generate linux2win command
if [[ -n "$autocmd" ]]; then
    dir="$(realpath "$autocmd")"
    for exe in $(ls "$dir"); do
        if [[ "$exe" == *.exe ]]; then
            cygexe=$(basename -s .exe "$exe")
            if [[ -d "$dir" ]]; then
                exe="$dir/$exe"
            fi
            echo "generating $cygexe ..."
            cat >$cygexe << EOF
#!/bin/bash
linux2win -e -r -i "'$exe' \$*"
EOF
            chmod +x "$cygexe"
        fi
    done
    exit 0
fi

# check input
if [[ -z "$input" ]]; then
    # read stdin
    IFS='' read -d '' -r input
    # check
    if [[ -z "$input" ]]; then
        exit 0
    fi
fi

# root direcotry (D:/cygwin64)
root_dir=$(pathconvert -m /)
if [[ "${root_dir:(-1)}" == "/" ]]; then
    root_dir=${root_dir:0:(-1)}
fi

# convert
if [[ -n "$win2linux" && -z "$execute" ]]; then
    if [[ -n "$precise" ]]; then
        result=''
        for i in $input; do
            result="${result}$(pathconvert -u $i) "
        done
    else
        result=$(sed "s#\\\\\\+#\\/#g; \
                      s#$root_dir/#/#Ig; \
                      s#\\([A-Za-z]\\):/#$mount_dir/\\l\\1/#g" <<<"$input")
    fi
else
    # convert
    if [[ -n "$precise" ]]; then
        result=''
        for i in $input; do
            i=${i/\~/$HOME}
            if [[ -e "$i" ]]; then
                result="${result}$(pathconvert -m $i) "
            else
                result="${result}${i} "
            fi
        done
    else
        result=$(sed "s#${HOME}/#${root_dir}${HOME}/#g; \
                      s#$mount_dir/\\([a-z]\\)/#\\u\\1:/#g; \
                      s#~/#${root_dir}${HOME}/#g; \
                      s#\\(^\\|\\s\\|\"\\)/\\([A-Za-z0-9._-]\\+\\)/#\\1${root_dir}/\\2/#g" <<<"$input")
    fi
    # slash
    if [[ -n "$slash" ]]; then
        result=${result//\//\\\\}
    fi
fi

# excute
if [[ -n "$execute" ]]; then
#    echo "$result"
    if [[ -n "$win2linux" ]]; then
        eval "$result" 2>&1 | linux2win -r
    else
        eval "$result"
    fi
else
    echo "$result"
fi
