#!/bin/zsh
######################################################################
# @file x
# @brief Extract or compress archive files
# @date 2017/2/28 22:57:47
# @author liqiang
######################################################################

if (( $# == 0 )) || [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
    cat <<EOF
Extract or compress archive files
Usage: x [-option] [file ...]
Default: Extract archive file
Options:
    -l, --list      List archive files' name.
    -p, --plain     Plain extract files
    -c, --compress  Compress files/directories to archive file
                    x -c <archive-name> <files>
EOF
    exit 0
fi

local extract_dir
local list_archive
local plain_extract
list_archive=0
plain_extract=0

# compress
if [[ "$1" == "-c" ]] || [[ "$1" == "--compress" ]]; then
    shift
    # compress
    case "$1" in
        (*.zip) zip -r "$@" ;;
        (*.7z) 7za a "$@" ;;
        (*.rar) ;;
        (*) tar cavf "$@" ;;
    esac
    exit 0
fi

# list
if [[ "$1" == "-l" ]] || [[ "$1" == "--list" ]]; then
    list_archive=1
    shift
fi

# plain extract
if [[ "$1" == "-p" ]] || [[ "$1" == "--plain" ]]; then
    plain_extract=1
    shift
fi

while (( $# > 0 )); do
    if [[ ! -f "$1" ]]; then
        echo "extract: '$1' is not a valid file" >&2
        shift
        continue
    fi

    if [[ "$list_archive" == "1" ]]; then
        # list
        case "$1" in
            (*.zip|*.war|*.jar|*.ipsw|*.xpi|*.apk) unzip -l "$1" | less ;;
            (*.rar) unrar l "$1" | less ;;
            (*.7z) 7za l "$1" | less ;;
            (*) tar tavf "$1" | less ;;
        esac
    else
        # extract
        case "$1" in
            (*.tar.gz|*.tar.bz2|*.tar.xz|*.tar.zma) extract_dir="${1:t:r:r}" ;;
            (*) extract_dir="${1:t:r}" ;;
        esac
        # exist ?
        if [[ -d $extract_dir ]]; then
            echo -n "'$extract_dir' is exist, remove and replace it? [yN] "
            read -rs -k 1 answer
            [[ -n "$answer" ]] && echo
            if [[ "$answer" != "y" ]]; then
                echo "Abort extract!" >&2
                return
            fi
            rm -rf "$extract_dir"
        fi
        mkdir "$extract_dir"
        case "$1" in
            (*.tar.gz|*.tgz) tar zxvf "$1" -C $extract_dir ;;
            (*.tar.bz2|*.tbz|*.tbz2) tar xvjf "$1" -C $extract_dir ;;
            (*.tar.xz|*.txz) tar --xz -xvf "$1" -C $extract_dir ;;
            (*.tar.zma|*.tlz) tar --lzma -xvf "$1" -C $extract_dir ;;
            (*.tar) tar xvf "$1" -C $extract_dir ;;
            (*.gz) gunzip "$1" ;;
            (*.bz2) bunzip2 "$1" ;;
            (*.xz) unxz "$1" ;;
            (*.lzma) unlzma "$1" ;;
            (*.Z) uncompress "$1" ;;
            (*.zip|*.war|*.jar|*.sublime-package|*.ipsw|*.xpi|*.apk) unzip "$1" -d $extract_dir ;;
            (*.rar) unrar x -ad "$1" ;;
            (*.7z) 7za x "$1" ;;
            (*.deb)
                mkdir -p "$extract_dir/control"
                mkdir -p "$extract_dir/data"
                cd "$extract_dir"; ar vx "../${1}" > /dev/null
                cd control; tar xzvf ../control.tar.gz
                cd ../data; x ../data.tar.*
                cd ..; rm *.tar.* debian-binary
                cd ..
            ;;
            (*)
                echo "extract: '$1' cannot be extracted" >&2
            ;;
        esac
        rmdir --ignore-fail-on-non-empty "$extract_dir"

        if [[ -d "$extract_dir" ]]; then
            if [[ "$plain_extract" == "1" ]]; then
                plain_extract_dir=$extract_dir
                while true; do
                    extract_sub_dir=$(ls -A $plain_extract_dir)
                    sub_dir_files_num=$(wc -l <<< $extract_sub_dir)
                    if [[ "$sub_dir_files_num" != "1" ]]; then
                        break
                    fi
                    if [[ ! -d "$plain_extract_dir/$extract_sub_dir" ]]; then
                        break
                    fi
                    plain_extract_dir="$plain_extract_dir/$extract_sub_dir"
                done
                setopt NULL_GLOB
                mv "$plain_extract_dir"/{.,}* ./
                unsetopt NULL_GLOB
                find "$extract_dir" -type d -empty -delete
            else
                # remove double dir
                extract_sub_dir=$(ls -A $extract_dir)
                sub_dir_files_num=$(wc -l <<< $extract_sub_dir)
                if [[ "$sub_dir_files_num" == "1" ]]; then
                    if [[ -e "$extract_sub_dir" && "$extract_sub_dir" != "$extract_dir" ]]; then
                        echo -n "'$extract_sub_dir' is exist, remove and replace it? [yN] "
                        read -rs -k 1 answer
                        [[ -n "$answer" ]] && echo
                        if [[ "$answer" != "y" ]]; then
                            echo "Abort triming extracted directory!" >&2
                            return
                        fi
                        rm -rf "$extract_sub_dir"
                    fi
                    rm -rf "${extract_sub_dir}.$$"
                    mv "$extract_dir/$extract_sub_dir" "${extract_sub_dir}.$$"
                    rmdir --ignore-fail-on-non-empty "$extract_dir"
                    mv "${extract_sub_dir}.$$" $extract_sub_dir
                fi
            fi
        fi
    fi

    shift
done

