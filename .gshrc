
#
# General Shell Configuration
#

#####################################
#               Alias               #
#####################################

# ls
alias ls='ls --color=auto --group-directories-first' # classify files in colour
alias l='ls -l --time-style=long-iso'                # long list file (--time-style=long-iso in GNU-coreutils)
alias ll='l -A'                                      # long list all file

# grep file
alias grep='grep -i -I --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn}'  # show differences in color
alias grepc="find -type f | awk -v IGNORECASE=1 'gsub(/ /, \"\\\\ \"){}; /.*\.[chs](pp)?$/;' | xargs grep -nir -I --color=auto"
alias grep-chinese="grep -P '[\p{Han}]'"

# dumpbin with windows
alias dumpbin-dependents='dumpbin_func dependents'
alias dumpbin-exports='dumpbin_func exports'

# Interactive operation...
#alias rm='rm -i'
#alias mv='mv -i'
#alias cp='cp -i'
alias cpx='rsync --info=progress2'

# cd to git root dir
alias cdg='git_root_dir=$(git rev-parse --show-toplevel) && [[ $git_root_dir ]] && cd $git_root_dir'

# vim stdin
alias vim-='vim -c "silent file stdin | set nomodified" -'

# diff
alias diff='diff --color=auto'

# Stopwatch
alias timer='echo "Timer started. Stop with Ctrl-D." && date && time cat && date'

# gbk2utf8
alias gbk2utf8='iconv -f GBK -t UTF8'

# web
#alias dict="webx 'http://dict.youdao.com/search?q='"
alias dict="webx 'http://cn.bing.com/dict/search?q='"
alias wiki="webx 'http://en.wikipedia.org/wiki/'"
alias baidu="webx 'http://m.baidu.com/s?wd='"
alias baike="webx 'http://wapbaike.baidu.com/item/'"
alias qsbk="webx 'http://www.qiushibaike.com/text/'"
alias news="webx 'http://news.sina.cn/?pos=1&vt=1&ttp=f1|1|1'"
alias zhihu="webx 'http://www.zhihu.com/explore'"
alias cpp="webx 'http://www.cplusplus.com/search.do?q='"
alias rfc="webx 'https://tools.ietf.org/rfc/rfc'"

# arm gdb with tmux,gdb.dashboard
alias armgdb="new -nm exec tmuxinator start armgdb"
alias armgdb2="new -nm exec tmuxinator start armgdb -n armgdb2"
alias armgdb3="new -nm exec tmuxinator start armgdb -n armgdb3"

# gdb for hs662x
alias arm-none-eabi-gdb-hs662x='arm-none-eabi-gdb -ex "source ~/.dotfiles/.gdb/hs662x.gdb.py"'

# curl
alias whereami="curl https://freegeoip.app/xml/"
alias weather="curl wttr.in"

# http file server
alias www="python -m SimpleHTTPServer 8000"

# check zsh startup time
alias zsh-startup-time="zsh -i -xv -c exit 2>&1 | ts -i "%.s" > zsh_startup.log"

# remove all empty directorys
alias rm-all-empty-dirs="find . -type d -empty -delete"

# file system scan
alias fscan='ncdu'

# remove repeat line (not sort) (awk '!x[$0]++' filename)
alias rm-repeat-line="awk '!x[\$0]++'"

#####################################
#             Function              #
#####################################

# Dumpbin function for windows
dumpbin_func ()
{
    mode=$1
    shift
    while (($#!=0))
    do
        case $mode in
            'machine')      dumpbin /HEADERS $1 | awk "/machine \(/{print \$3 \": $1\"}"
            ;;
            'dependents')   dumpbin /DEPENDENTS $1
            ;;
            'exports')      dumpbin /EXPORTS $1
            ;;
        esac
        shift
    done
}

# du&sort: Stats directorys size and sort it
ds ()
{
    du -h --max-depth=1 $1 | sort -rh
}

# vim directory diff
vimdiff-dir ()
{
    vim -c ":DirDiff $1 $2"
}

# latest
latest ()
{
    find "$@" -type f -printf "%TY-%Tm-%Td %TT \t%p\n" | sort -rn | less -F
}

# find file
ff ()
{
    find -iname "*$@*"
}

# grep pattern
gg ()
{
    grep -nir "$@"
}

# create a daemon process
daemon ()
{
    (nohup "$@" &) &
}

# do some commands in each sub-directory
dirdo ()
{
    find . -maxdepth 1 -mindepth 1 -type d -exec sh -c "(echo -e \"\e[33m{}:\e[0m\" && cd '{}' && eval '$*'; echo)" \;
}

# Count the number of times a word appears in files
# $ count <PATTERN> <FILES>
count ()
{
    grep -o "$@" | wc -l
}

# loop command times
loop ()
{
    num=0
    if [[ "$1" == -* ]]; then
        num=${1#-}
        shift
    fi

    if [[ "$num" == "0" ]]; then
        while true; do
            eval "$@"
        done
    else
        for ((i=0;i<$num;i++)); do
            eval "$@"
        done
    fi

    unset $num
}

# diff pach file
diff-path ()
{
    if [[ -d "$1" && -d "$2" ]]; then
        diff -U0 <(cd "$1" && find | sort) <(cd "$2" && find | sort)
    else
        echo "Usage: diff-path <path1> <path2>"
    fi
}

# proxy enable/disable
proxy_enable ()
{
    port=${1:-'8118'}
    export http_proxy="http://127.0.0.1:$port"
    export https_proxy="http://127.0.0.1:$port"
    export no_proxy="localhost, 127.0.0.1, ::1"
}
proxy_disable ()
{
    export http_proxy=
    export https_proxy=
    export no_proxy=
}

#####################################
#             Export                #
#####################################

# default X-window display
export DISPLAY=:0.0


#####################################
#               Misc                #
#####################################

# Disable flow control (ctrl-s, ctrl-q)
#stty -ixon

# For sudo and new command
if [[ -f "/tmp/.init.tmp" ]]; then
    mv -f /tmp/.init.tmp /tmp/.init.tmp2
    source /tmp/.init.tmp2
    rm -rf /tmp/.init.tmp2
else
    echo ""
    echo "                             ! Welcome Qiang !"
fi

