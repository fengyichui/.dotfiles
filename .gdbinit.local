#
# GDB init local file
#

define hs662x
source ~/.gdb/hs662x.gdb.py
end

define xx
source ~/.gdb/dashboard.gdb
end

define sii
si
x/i $pc
end

define connect2local
target remote localhost:2331
end

define connect2remote
target remote 192.168.2.66:2331
end

define connect
#connect2remote
connect2local
end

#remap RAM to 0x00000000
define remap2ram_hs662x
set *0x400e003c=0x336
set *0x400e003c=0x336
end

#remap ROM to 0x00000000
define remap2rom_hs662x
set *0x400e003c=0x335
set *0x400e003c=0x335
end

define rc
mon reset 1
load
c
end

define rc1
remap2ram_hs662x
#reset core only
mon reset 1
load
c
end

define rst
set *0=0
set *4=0
mon reset 2
end

#mon speed 1000
#mon flash device = STM32F103VE
#mon flash download = 1

# Download application to flash, use KEIL FLASH Algorithm
define _download
    mon reset 1
    mon halt
    file ~/.gdb/HS662X.GDB.FLM
    restore ~/.gdb/HS662X.GDB.FLM
    set $sp=&FlashDevice.sectors[1024]
    set $buffer=(unsigned char *)FlashDevice.sectors
    set $sector_size=4096

    # Show device name
    printf "\n"
    output FlashDevice.DevName
    printf "\n"

    # Get file size
    shell echo "set \$file_size=$(stat -c %s a.bin)" >/tmp/download_gdb.tmp
    source /tmp/download_gdb.tmp
    shell rm -rf /tmp/download_gdb.tmp

    # show file size
    printf "a.bin: %.2fkB\n", $file_size/1024.0
    printf "\n"

    printf "Erase...\n"
    set $res=Init(0, 6000000, 1)
    set $i=0
    while $i < $file_size
        set $res=EraseSector($i)
        set $i=$i+$sector_size
    end
    set $res=UnInit(1)

    printf "Program...\n"
    set $res=Init(0, 6000000, 2)
    set $i=0
    while $i < $file_size
        set $left=$file_size-$i
        if $left < $sector_size
            set $len=$left
        else
            set $len=$sector_size
        end
        restore a.bin binary $buffer-$i $i $i+$len
        set $res=ProgramPage($i, $len, $buffer)
        set $i=$i+$sector_size
    end
    set $res=UnInit(2)

    printf "Verify...\n"
    set $res=Init(0, 6000000, 3)
    set $i=0
    while $i < $file_size
        set $left=$file_size-$i
        if $left < $sector_size
            set $len=$left
        else
            set $len=$sector_size
        end
        restore a.bin binary $buffer-$i $i $i+$len
        set $res=Verify($i, $len, $buffer)
        if $res != $i+$len
            printf "!!! FAIL !!!\n"
            return
        end
        set $i=$i+$sector_size
    end
    set $res=UnInit(3)
    file
end
document _download
Syntax: download
| Download binary(a.bin) file to flash
end

# vim: ft=gdb
