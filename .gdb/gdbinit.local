#
# GDB init local file
#

define hs662x
source ~/.dotfiles/.gdb/hs662x.gdb.py
end

define xx
source ~/.dotfiles/.gdb/dashboard.gdb
end

define connect2local
ignore-all kill
target remote localhost:2331
end

define connect2remote
ignore-all kill
target remote 192.168.2.66:2331
end

define connect
#connect2remote
connect2local
disable_wdt
ignore-all mon exec EnableLowPowerHandlingMode
end

define jlink
shell gdbserver-jlink -X --retry --speed=10000 -N="0xE00" -N="0x400"
end

define jlink-stop
shell gdbserver-jlink --stop
end

define reconnect
ignore-all kill
jlink
connect
end

define reconnect_hs6621
reconnect
mon device hs6621
ignore-all mon exec SetAllowFlashCache = 0
end

define reconnect_hs6621c
reconnect
mon device hs6621c
# CPU div=2
set *0x40001004 = 0x00c00206
set *0x4000100C = 1
ignore-all mon exec SetAllowFlashCache = 0
end

# In Windows, use UsbDriverTool.exe to install 'libusb-WinUSB' with 'J-link'
define reconnect_openocd
ignore-all kill
target remote | openocd -c 'adapter driver jlink; transport select swd; set CHIPNAME CM; source [find target/fm4.cfg]; adapter speed 5000; gdb_port pipe; log_output /tmp/openocd.log;'
disable_wdt
end

define rc
# 1st-rst: halt cpu
mon reset 1
load
# 2nd-rst: make MSP valid
mon reset 1
c
end

define rc1
reloadfile
remap2ram
# 1st-rst: halt cpu
mon reset 1
load
# 2nd-rst: make MSP valid
mon reset 1
c
end

define rc2
reloadfile
# 1st-rst: halt cpu
mon reset 1
# Invalidate cache
set *0xE0042004 = 1
set *0xE0042008 = 0
set *0xE0042020 = 1
set *0xE0042004 = 0
set *0xE0042008 = 1
ignore-all mon exec InvalidateCache
# load
load
# set new sp and pc
set $sp = *0x50003000
set $pc = *0x50003004
c
end

define rrc
if $argc >= 1
file
shell makekeil rom/hs6620_rom.uvproj
end
mon reset 1
file rom/out/hs6620_rom.axf
restore rom/out/hs6620_rom.bin binary 0x08000000
mon reset 1
c
end
document rrc
Syntax: rcc [1]
| HS662x rom reset-load-continue
| 1: do makekeil
end

# vim: ft=gdb
